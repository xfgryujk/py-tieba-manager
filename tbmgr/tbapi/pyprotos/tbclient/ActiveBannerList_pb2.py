# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tbclient/ActiveBannerList.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tbclient/ActiveBannerList.proto',
  package='tbclient',
  syntax='proto2',
  serialized_pb=_b('\n\x1ftbclient/ActiveBannerList.proto\x12\x08tbclient\"\x83\x01\n\x10\x41\x63tiveBannerList\x12\x13\n\x0b\x61\x63tive_desc\x18\x04 \x01(\t\x12\x13\n\x0b\x61\x63tive_name\x18\x02 \x01(\t\x12\x13\n\x0b\x61\x63tive_type\x18\x06 \x01(\r\x12\x12\n\nactive_url\x18\x03 \x01(\t\x12\n\n\x02id\x18\x01 \x01(\r\x12\x10\n\x08skip_url\x18\x05 \x01(\t')
)




_ACTIVEBANNERLIST = _descriptor.Descriptor(
  name='ActiveBannerList',
  full_name='tbclient.ActiveBannerList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='active_desc', full_name='tbclient.ActiveBannerList.active_desc', index=0,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='active_name', full_name='tbclient.ActiveBannerList.active_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='active_type', full_name='tbclient.ActiveBannerList.active_type', index=2,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='active_url', full_name='tbclient.ActiveBannerList.active_url', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='tbclient.ActiveBannerList.id', index=4,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='skip_url', full_name='tbclient.ActiveBannerList.skip_url', index=5,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=177,
)

DESCRIPTOR.message_types_by_name['ActiveBannerList'] = _ACTIVEBANNERLIST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ActiveBannerList = _reflection.GeneratedProtocolMessageType('ActiveBannerList', (_message.Message,), dict(
  DESCRIPTOR = _ACTIVEBANNERLIST,
  __module__ = 'tbclient.ActiveBannerList_pb2'
  # @@protoc_insertion_point(class_scope:tbclient.ActiveBannerList)
  ))
_sym_db.RegisterMessage(ActiveBannerList)


# @@protoc_insertion_point(module_scope)
